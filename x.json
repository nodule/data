{
  "name": "data",
  "description": "Data nodes for ChiÏ‡",
  "version": "0.0.2",
  "repository": {
    "type": "git",
    "url": "https://github.com/nodule/data.git"
  },
  "dependencies": {
    "dot-object": "0.x.x",
    "ini": "1.x.x",
    "yaml": "~0.2.3"
  },
  "nodes": [
    {
      "ports": {
        "input": {
          "in": {
            "title": "Boolean",
            "type": "boolean",
            "required": true
          }
        },
        "output": {
          "out": {
            "title": "out",
            "type": "boolean"
          }
        }
      },
      "phrases": {
        "active": "Creating boolean value {input.boolean}"
      },
      "description": "Boolean",
      "title": "Boolean",
      "ns": "data",
      "name": "boolean",
      "fn": "output.out = input.in\n"
    },
    {
      "ports": {
        "input": {
          "in": {
            "title": "CSS",
            "type": "string",
            "format": "css",
            "required": true
          }
        },
        "output": {
          "out": {
            "title": "out",
            "type": "string"
          }
        }
      },
      "phrases": {
        "active": "Creating CSS"
      },
      "description": "CSS",
      "title": "CSS",
      "ns": "data",
      "name": "css",
      "fn": "output.out = input.in\n"
    },
    {
      "ports": {
        "input": {
          "in": {
            "title": "haml",
            "type": "string",
            "format": "haml",
            "required": true
          }
        },
        "output": {
          "out": {
            "title": "out",
            "type": "string"
          }
        }
      },
      "phrases": {
        "active": "Creating HAML"
      },
      "description": "haml",
      "title": "HAML",
      "ns": "data",
      "name": "haml",
      "fn": "output.out = input.in\n"
    },
    {
      "ports": {
        "input": {
          "in": {
            "title": "Handlebars",
            "type": "string",
            "format": "handlebars",
            "required": true
          }
        },
        "output": {
          "out": {
            "title": "out",
            "type": "string"
          }
        }
      },
      "phrases": {
        "active": "Creating Handlebars template"
      },
      "description": "Handlebars",
      "title": "Handlebars",
      "ns": "data",
      "name": "handlebars",
      "fn": "output.out = input.in\n"
    },
    {
      "dependencies": {
        "npm": {
          "ini": "1.x.x"
        }
      },
      "ports": {
        "input": {
          "in": {
            "title": "ini",
            "type": "string",
            "format": "ini",
            "required": true
          }
        },
        "output": {
          "out": {
            "title": "out",
            "type": "object"
          }
        }
      },
      "phrases": {
        "active": "Creating ini content"
      },
      "description": "ini",
      "title": "ini",
      "ns": "data",
      "name": "ini",
      "fn": "output.out = ini.parse(input.in)\n"
    },
    {
      "ports": {
        "input": {
          "in": {
            "title": "Jade",
            "type": "string",
            "format": "jade",
            "required": true
          }
        },
        "output": {
          "out": {
            "title": "out",
            "type": "string"
          }
        }
      },
      "phrases": {
        "active": "Creating Jade template"
      },
      "description": "Jade",
      "title": "Jade",
      "ns": "data",
      "name": "jade",
      "fn": "output.out = input.in\n"
    },
    {
      "ports": {
        "input": {
          "in": {
            "title": "JSON",
            "type": "string",
            "format": "json",
            "required": true
          }
        },
        "output": {
          "out": {
            "title": "out",
            "type": "string"
          }
        }
      },
      "phrases": {
        "active": "Creating JSON content"
      },
      "description": "JSON",
      "title": "JSON",
      "ns": "data",
      "name": "json",
      "fn": "output.out = JSON.parse(input.in)\n"
    },
    {
      "ports": {
        "input": {
          "in": {
            "title": "LESS",
            "type": "string",
            "format": "less",
            "required": true
          }
        },
        "output": {
          "out": {
            "title": "out",
            "type": "string"
          }
        }
      },
      "phrases": {
        "active": "Creating LESS content"
      },
      "description": "LESS",
      "title": "LESS",
      "ns": "data",
      "name": "less",
      "fn": "output.out = input.in\n"
    },
    {
      "ports": {
        "input": {
          "in": {
            "markdown": {
              "title": "Markdown",
              "type": "string",
              "format": "markdown",
              "required": true
            }
          }
        },
        "output": {
          "out": {
            "title": "out",
            "type": "string"
          }
        }
      },
      "phrases": {
        "active": "Creating Markdown template"
      },
      "description": "Markdown",
      "title": "Markdown",
      "ns": "data",
      "name": "markdown",
      "fn": "output.out = input.in\n"
    },
    {
      "ports": {
        "input": {
          "in": {
            "title": "Number",
            "type": "number",
            "required": true
          }
        },
        "output": {
          "out": {
            "title": "out",
            "type": "number"
          }
        }
      },
      "phrases": {
        "active": "Creating Number {{input.number}}"
      },
      "description": "Number",
      "title": "Number",
      "ns": "data",
      "name": "number",
      "fn": "output.out = input.in\n"
    },
    {
      "ports": {
        "input": {
          "in": {
            "title": "Password",
            "type": "string",
            "format": "password",
            "required": true
          }
        },
        "output": {
          "out": {
            "title": "out",
            "type": "password"
          }
        }
      },
      "phrases": {
        "active": "Creating password object"
      },
      "description": "Creates a password object",
      "title": "Password",
      "ns": "data",
      "name": "password",
      "fn": "/* simple prototype to distinct passwords from strings\n * Not to collect passwords, but to warn.. :)\n * */\nfunction password(pass) {\n  this.pass = pass;\n};\n\npassword.prototype.toString = function passwordToString() {\n  return this.pass;\n};\n\noutput.out = new password(input.in);\n"
    },
    {
      "dependencies": {
        "npm": {
          "dot-object": "0.x.x"
        }
      },
      "ports": {
        "input": {
          "in": {
            "title": "Object",
            "description": "An Object, e.g { name: { first: 'John', last: 'Doe' } }",
            "type": "object",
            "async": true
          },
          "path": {
            "title": "Path",
            "description": "Specify a path with . syntax (e.g. name.last )",
            "type": "string",
            "required": true
          }
        },
        "output": {
          "out": {
            "title": "Output",
            "type": "any"
          },
          "error": {
            "title": "Error",
            "type": "Error"
          }
        }
      },
      "phrases": {
        "active": "Picking {{input.path}} from object"
      },
      "description": "Pick one value from an object",
      "async": true,
      "title": "Pick",
      "ns": "data",
      "name": "pick",
      "fn": "on.input.in = function(data) {\n  // dot_object api should be fixed..\n  var res = dot_object().pick(input.path, data);\n  if(typeof res !== 'undefined') {\n    output({out: res});\n  } else {\n    output({error: Error(input.path + ' not found')});\n  }\n};\n"
    },
    {
      "ports": {
        "input": {
          "in": {
            "title": "SQL",
            "type": "string",
            "format": "sql",
            "required": true
          }
        },
        "output": {
          "out": {
            "title": "out",
            "type": "string"
          }
        }
      },
      "phrases": {
        "active": "Creating SQL"
      },
      "description": "SQL",
      "title": "SQL",
      "ns": "data",
      "name": "sql",
      "fn": "output.out = input.in\n"
    },
    {
      "ports": {
        "input": {
          "in": {
            "title": "String",
            "type": "any",
            "async": true,
            "required": true
          }
        },
        "output": {
          "out": {
            "title": "out",
            "type": "string"
          }
        }
      },
      "phrases": {
        "active": "Creating string {{input.string}}"
      },
      "description": "String",
      "async": true,
      "title": "String",
      "ns": "data",
      "name": "string",
      "fn": "on.input.in = function() {\n  output( { out: typeof data === null ? 'null' : data.toString() });\n};\n"
    },
    {
      "ports": {
        "input": {
          "in": {
            "title": "SVG",
            "type": "string",
            "format": "svg",
            "required": true
          }
        },
        "output": {
          "out": {
            "title": "out",
            "type": "string"
          }
        }
      },
      "phrases": {
        "active": "Creating SVG content"
      },
      "description": "SVG",
      "title": "SVG",
      "ns": "data",
      "name": "svg",
      "fn": "output.out = input.in\n"
    },
    {
      "ports": {
        "input": {
          "in": {
            "title": "Text",
            "type": "string",
            "format": "text",
            "required": true
          }
        },
        "output": {
          "out": {
            "title": "out",
            "type": "string"
          }
        }
      },
      "phrases": {
        "active": "Creating Text"
      },
      "description": "Text",
      "title": "Text",
      "ns": "data",
      "name": "text",
      "fn": "output.out = input.in\n"
    },
    {
      "ports": {
        "input": {
          "in": {
            "title": "Textile",
            "type": "string",
            "format": "textile",
            "required": true
          }
        },
        "output": {
          "out": {
            "title": "out",
            "type": "string"
          }
        }
      },
      "phrases": {
        "active": "Creating Textile content"
      },
      "description": "Textile",
      "title": "Textile",
      "ns": "data",
      "name": "textile",
      "fn": "output.out = input.in\n"
    },
    {
      "ports": {
        "input": {
          "in": {
            "title": "XML",
            "type": "string",
            "format": "xml",
            "required": true
          }
        },
        "output": {
          "out": {
            "title": "out",
            "type": "string"
          }
        }
      },
      "phrases": {
        "active": "Creating XML content"
      },
      "description": "XML",
      "title": "XML",
      "ns": "data",
      "name": "xml",
      "fn": "output.out = input.in\n"
    },
    {
      "dependencies": {
        "npm": {
          "yaml": "0.x.x"
        }
      },
      "ports": {
        "input": {
          "in": {
            "title": "yaml",
            "type": "string",
            "format": "yaml",
            "required": true
          }
        },
        "output": {
          "out": {
            "title": "out",
            "type": "string"
          }
        }
      },
      "phrases": {
        "active": "Creating YAML content"
      },
      "description": "yaml",
      "title": "YAML",
      "ns": "data",
      "name": "yaml",
      "fn": "output.out = yaml.eval(input.in)\n"
    }
  ],
  "twigs": []
}